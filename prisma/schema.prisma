// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//Prisma is an open-source ORM (Object-Relational Mapping) tool that helps you work with databases
// in TypeScript or JavaScript. It simplifies database operations and provides a type-safe way to
//  query and manipulate data. 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Course {
  id String @id @default(cuid())
  useId String
  title String @db.Text
  description String? @db.Text
  imageUrl String? @db.Text
  price Float?
  isPublished Boolean @default(false)
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id]) //If categoryId is null, the category relation will also be null (indicating no associated category).



  attachments Attachment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model Category {
  id       String @id @default(cuid())
  name     String @unique
  courses Course[]
}

model Attachment {
  id String @id @default(cuid())
  name String 
  url String @db.Text
  courseId String 

  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade) //inner join in sql onDelete cascade that means once the Course deleted there attechemnt we deleted to !
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([courseId])

}